{"title":"NPM Prepare Script Pitfall","date":"2016-11-27","slug":"npm-prepare-script-pitfall","content":"<p>Today I learned that if you run <code>npm publish</code> with sudo and have a prepare script that runs babel, that script will fail to actually run.\n\n``` json\n{\n  \"name\": \"@erickmerchant/example\",\n  \"version\": \"1.0.0\",\n  \"description\": \"An example\",\n  \"main\": \"dist/main.js\",\n  \"scripts\": {\n    \"build\": \"babel --presets es2015 main.js -d dist/\",\n    \"prepare\": \"npm run build\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.10.1\",\n    \"babel-preset-es2015\": \"^6.9.0\"\n  }\n}\n```\n\n<p>For instance trying to <code>sudo npm publish</code> a package with the above package.json you'd get the error <code>npm WARN lifecycle @erickmerchant/example@1.0.0~prepare: cannot run in wd %s %s (wd=%s) @erickmerchant/example@1.0.0 npm run build /Users/erickmerchant/Code/example</code>.\n\n<p>Your package will publish correctly, essentially publishing a broken version. In my case it just published the last code that was actually transpiled with <code>npm run prepare</code>. You should never <code>npm publish</code> with sudo. You should also never really need to use sudo with npm.\n\n<ul>\n  <li><a href=\"https://docs.npmjs.com/misc/scripts\">About scripts</a>\n  <li><a href=\"https://www.npmjs.com/package/np\">Highly recommended package to make publishing easier</a>\n  <li><a href=\"https://docs.npmjs.com/getting-started/fixing-npm-permissions\">A useful video about fixing npm permissions</a>\n</ul>\n"}